---
swagger: "2.0"
info:
  description: "This specification defines the APIs provided by the application to\
    \ manage/share the lab resources by reserving and releasing it."
  version: "1.0"
  title: "Lab Resource Management"
  contact:
    name: "Mithun B S, Ajay Jampale"
    email: "mithun.bs@gmail.com"
host: "localhost:8081"
basePath: "/v1"
schemes:
- "http"
paths:
  /resourcetype:
    get:
      tags:
      - "ResourceType"
      summary: "Get All Resource Types."
      description: "Get All Resource Types configured in the application."
      operationId: "GetResourceTypes"
      parameters:
      - name: "parent_resource_type"
        in: "query"
        description: "Retrieves all resource types which falls under the given Parent\
          \ Resource Type."
        required: false
        type: "string"
        x-exportParamName: "ParentResourceType"
      responses:
        200:
          $ref: "#/definitions/ResourceTypesResponse"
        404:
          description: "Given Parent Resource Type not found in the system."
        500:
          description: "Unexpected error."
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/ErrorModel"
    post:
      tags:
      - "ResourceType"
      summary: "Create a Resource Type"
      operationId: "CreateResourceType"
      parameters:
      - in: "body"
        name: "Resource Type"
        description: "Add a new Resource Type."
        required: false
        schema:
          $ref: "#/definitions/NewResourceType"
        x-exportParamName: "ResourceType"
      responses:
        200:
          description: "OK"
        401:
          description: "Authorization information is missing or invalid."
        409:
          description: "A Resource Type with the specified name already exists."
        410:
          description: "The specified Parent Resource Type doesnt exist."
        500:
          description: "Unexpected error."
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/ErrorModel"
    delete:
      tags:
      - "ResourceType"
      summary: "Delete Resource type."
      description: "Delete Resource Type configured in the application."
      operationId: "DeleteResourceType"
      parameters:
      - name: "ResourceType"
        in: "query"
        description: "Name of the Resource Type to be deleted"
        required: true
        type: "string"
        x-exportParamName: "ResourceType"
      responses:
        200:
          description: "OK"
        401:
          description: "Authorization information is missing or invalid."
        404:
          description: "A resource type with the specified name was not found."
        500:
          description: "Unexpected error."
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/ErrorModel"
definitions:
  ResourceTypesResponse:
    properties:
      items:
        type: "array"
        uniqueItems: true
        items:
          $ref: "#/definitions/ResourceTypeResponse"
    title: "Resource Types"
  ResourceTypeResponse:
    type: "object"
    properties:
      resourcetypeid:
        type: "string"
        description: "ID of the resource type."
      resourcetypename:
        type: "string"
        description: "Name of the resource type."
      parentresourcetypeid:
        type: "string"
        description: "ID of the parent resource type."
    title: "Resource Type"
  NewResourceType:
    type: "object"
    required:
    - "resourceTypeName"
    properties:
      resourceTypeName:
        type: "string"
      parentResourceTypeName:
        type: "string"
    example:
      resourceTypeName: "resourceTypeName"
      parentResourceTypeName: "parentResourceTypeName"
  ErrorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      message:
        type: "string"
      code:
        type: "integer"
        minimum: 100
        maximum: 600
